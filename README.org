* RSA implementation in python3

Usage:

#+begin_src bash
$ ./rsa.py -h
Usage: rsa.py [options]

Simple command line program for RSA encryption

Options:
  -h, --help            show this help message and exit
  -g, --generate-keys   Generate public and private keys optionally specify
                        the size of p and q with --pqsize
  -p PQSIZE, --pqsize=PQSIZE
                        Specify the size of p and q
  -e MESSAGE, --encrypt=MESSAGE
                        encrypt message
  -d CIPHER_TEXT, --decrypt=CIPHER_TEXT
                        decrpyt message
  -f FILENAME_PUB, --load_key_pub=FILENAME_PUB
                        Load public key file
  -F FILENAME_PRIVATE, --load_key=FILENAME_PRIVATE
                        Load private key file

# Generate
$ ./rsa.py -g -pq 100

Generating keys
----------------------------
SIZE OF r in bits 896
Size of d in bits 896
----------------------------
Generated keys!
Public key stored in key_rsa.pub
Private key stored in key_rsa. Keep this secret!
----------------------------

# Encrypt
$ ./rsa.py -e "hello world" -f key_rsa.pub
message:  126207244316550804821666916
c:  43172238243216872898641139577778793630868727550085006752011

# Decrypt
$ ./rsa.py -d 43172238243216872898641139577778793630868727550085006752011 -f key_rsa.pub -F key_rsa
hello world
#+end_src

You may need to make the file executable with:
 
#+begin_src bash
chmod +x rsa.py
#+end_src
